$ontext
    This file can be included in FishPAL to generate an xml file used by the GUI
    to describe the various output items.
    
    It is based on the sets and their explanatory texts

    @author: Torbjorn Jansson, SLU

$offtext

file xml "File to contain the xml code" /gui\views\dimdefs.xml/;

* --- Define an indent space to use in many places
$set s "   "

* --- Write standard header
xml.ap = 0;
put xml;
put "<?xml version='1.0' encoding='ISO-8859-15' ?>" /;
put "<generated>" /;
put "<!-- XLM-file generated by FishPAL include_files\generate_dimdefs.gms -->" /;


* -------------------------------------------------------------------------------------------------
put "%s%<!-- The first dimension of the result parameter, (fisheryDomain). -->"/;
put /;
* -------------------------------------------------------------------------------------------------

* --- Special key/region "total"
put "%s%<region><key>total</key><sel>[fishery,gear,area,segment,all]</sel><itemName>All fisheries</itemName></region>"/;
put /;

* --- Write list of areas and quota areas
put "%s%<!-- Area and quotaArea -->"/;
loop(quotaArea,
    if(area(quotaArea),
        put"%s%<region><key>",quotaArea.tl:0,"</key><sel>[quotaArea,area,all]</sel><itemName>",quotaArea.te(quotaArea)",</itemName></region>"/;
    else
        put"%s%<region><key>",quotaArea.tl:0,"</key><sel>[quotaArea,all]</sel><itemName>",quotaArea.te(quotaArea)",</itemName></region>"/;
    );
);
put /;

* --- Write list of segments
put "%s%<!-- Segments -->"/;
loop(seg,
    put "%s%<region><key>",seg.tl:0,"</key><sel>[segment,all]</sel><itemName></itemName></region>" /;
);
put /;


* --- Write list of gear
put "%s%<!-- Gear -->"/;
loop(gear,
    put "%s%<region><key>",gear.tl:0,"</key><sel>[gear,all]</sel><itemName></itemName></region>" /;
);
put/;


* --- Write list of fisheries
put "%s%<!-- Fishery -->"/;
loop(fishery,
    put "%s%<region><key>",fishery.tl:0,"</key><sel>[fishery,all]</sel><itemName>";
    loop(f_seg_g_a(fishery,seg,gear,area),
        put fishery.tl:0, ": Segment ",seg.tl:0," using gear ",gear.tl:0," in area ",area.tl:0;
    );
    put "</itemName></region>" /;
);
put/;


* -------------------------------------------------------------------------------------------------
put "%s%<!-- Second dimension of results parameter: Species and aggregates of species (speciesDomain). -->"/;
put /;
* -------------------------------------------------------------------------------------------------


* --- Special key "allSpecies"
*put "%s%<product><key>allSpecies</key><itemName>All species</itemName><sel>[allSpecies,all]</sel></product>"/;
*put /;

* --- Write out aggregates of inputs or outputs
put "%s%<!-- ioAggregates -->"/;
loop(ioAggregate,
    put "%s%<product><key>",ioAggregate.tl:0,"</key><sel>";
    if(sameas(ioAggregate,"allSpecies"), put "allSpecies,");
    
    put "ioAggregate,all</sel><itemName>",ioAggregate.te(ioAggregate);
    put "</itemName></product>"/;
);
put /;
  

* --- Write out species and catchquotaspecies in some orderly fashion
put "%s%<!-- Species and catch quotas -->"/;
loop(speciesDomain $ [species(speciesDomain) or catchQuotaName(speciesDomain)],
    put "%s%<product><key>",speciesDomain.tl:0,"</key><sel>";
    if(species(speciesDomain), put "species,");
    if(catchQuotaName(speciesDomain), put "quotaSpecies,");
*   --- Add a selection label indicating if this species actually has a quota in some quotaArea
    if(sum((catchQuotaName,quotaArea) $ sameas(speciesDomain,catchQuotaName), p_TACOri(catchQuotaName,quotaArea)), put "hasQuota,");
    put "all</sel></product>"/;
);
put /;


* --- Write out inputs
put "%s%<!-- Inputs -->"/;
loop(input,
    put "%s%<product><key>",input.tl:0,"</key><sel>";
    if(variableInput(input), put "variableInput,");
    if(fixInput(input), put "fixInput,");
    put "input,all</sel></product>"/;
);
put /;





* -------------------------------------------------------------------------------------------------
put "%s%<!-- Third dimension of results parameter: variables, equations etc. -->"/;
put /;
* -------------------------------------------------------------------------------------------------

put "%s%<!-- ResLabel -->"/;
loop(resLabel,
    put "%s%<activity><key>",resLabel.tl:0,"</key><sel>";
    if(dualResult(resLabel), put "dualResult,");
    put "all</sel><itemName>",resLabel.te(resLabel):0,"</itemName></activity>" /;
);
put /;


put "%s%<!-- Fourth dimension (sim, est, and suffixes for equations) -->"/;
loop(statItem,
    put "%s%<dim5><key>",statItem.tl:0,"</key><sel>"statItem.tl;
    put ",all</sel><itemName></itemName></dim5>" /;
);
put /;


* --- Write standard footer
put "</generated>";

